--DROP for testing in postman
DROP TABLE IF EXISTS FILMS_MPA;
DROP TABLE IF EXISTS MPA ;
DROP TABLE IF EXISTS FILMS_GENRES;
DROP TABLE IF EXISTS GENRES;
DROP TABLE IF EXISTS LIKES_FILM;
DROP TABLE IF EXISTS films_directors;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS users_friendship;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS directors;

CREATE TABLE IF NOT EXISTS films(
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(50),
description VARCHAR(200),
release_date DATE,
duration INT);

CREATE TABLE IF NOT EXISTS genres(
genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
genre_name VARCHAR(50));

CREATE TABLE IF NOT EXISTS films_genres(
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
film_id INTEGER REFERENCES films(id) ON DELETE CASCADE,
genre_id INTEGER REFERENCES genres(genre_id) ON DELETE CASCADE);

CREATE TABLE IF NOT EXISTS mpa(
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
mpa_name VARCHAR(10));

CREATE TABLE IF NOT EXISTS films_mpa(
film_id INTEGER PRIMARY KEY,
FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
mpa_id INTEGER REFERENCES mpa(id));

CREATE TABLE IF NOT EXISTS users(
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email VARCHAR(200),
login VARCHAR(200) NOT NULL,
name VARCHAR(200),
birthday DATE);

CREATE TABLE IF NOT EXISTS likes_film(
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
film_id INTEGER REFERENCES films(id) ON DELETE CASCADE,
user_id INTEGER REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS users_friendship(
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
user1_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
user2_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
mutually boolean
);

CREATE TABLE IF NOT EXISTS directors(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(50)
);

CREATE TABLE IF NOT EXISTS films_directors(
    film_id INTEGER REFERENCES films(id),
    director_id INTEGER REFERENCES directors(id)
);
